{"version":3,"sources":["../../../src/components/react/SendSmsCodeBtn.jsx"],"names":["propTypes","title","PropTypes","string","timer","number","onClick","func","isRequired","resetTool","defaultProps","countdownTitle","pendingTitle","errorTitle","styleName","SendSmsCodeBtn","props","state","isCounting","remainTime","_initState","_timer","clearInterval","setState","_timerStartPoint","Date","now","setInterval","clean","resetState","isPending","isError","then","startTimer","catch","handleClick","bind","Component"],"mappings":"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","file":"SendSmsCodeBtn.js","sourcesContent":["/**\n * @倒计时按钮\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n *   mobileOrToken      手机号码或token    string    [是否必输：是]，[示例：15012345678]\n     smsType            短信类型    string    [是否必输：是]，00:注册验证码;02:找回登录密码验证码;20:登录动态验证码;\n     userType           用户类型    number    [是否必输：是]，(借款人:2;商户:1000)\n     verifyCode         图形验证码    string    [是否必输：否]，[长度：4]，[示例：6891]\n     verifyNoncestr     随机字符串    string    [是否必输：否]，[长度：32]与本次\"获得图形验证码\"发送的noncestr一致\n * @param data\n * @returns {service}\n */\nconst propTypes = {\n  title: PropTypes.string,\n  timer: PropTypes.number,\n  // onCLick 点击按钮，返回promise\n  onClick: PropTypes.func.isRequired,\n  resetTool: PropTypes.func\n};\nconst defaultProps = {\n  timer: 60,\n  title: '获取验证码',\n  countdownTitle: '秒后重新获取',\n  pendingTitle: '正在发送...',\n  errorTitle: '出错,请重试',\n  styleName: ''\n};\n\nexport default class SendSmsCodeBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCounting: false,\n      remainTime: -1\n    };\n    this._initState = { ...this.state };\n  }\n\n  clean() {\n    this.isCounting = false;\n    this._timer && clearInterval(this._timer);\n  }\n  resetState() {\n    this.setState(this._initState);\n  }\n\n  startTimer() {\n    if (this.isCounting) return;\n    this.isCounting = true;\n    this.setState({\n      isCounting: true,\n      remainTime: this.props.timer\n    });\n    this._timerStartPoint = Date.now();\n    this._timer = setInterval(() => {\n      if (this.state.remainTime === 0) {\n        this.clean();\n        this.resetState();\n      } else {\n        this.setState({\n          remainTime:\n            this.props.timer -\n            (((Date.now() - this._timerStartPoint) / 1000) | 0)\n        });\n      }\n    }, 1000);\n  }\n  handleClick() {\n    if (this.state.isPending || this.isCounting) return;\n\n    this.setState({\n      isPending: true,\n      isError: false,\n    });\n\n    this.props\n      .onClick()\n      .then(() => {\n        this.setState({ isPending: false });\n        this.startTimer();\n      })\n      .catch(() => {\n        this.setState({ isPending: false, isError: true });\n        this.clean();\n        this.resetState();\n      });\n  }\n  componentWillMount() {\n    this.clean();\n  }\n  componentDidMount() {\n    this.props.resetTool &&\n      this.props.resetTool(() => {\n        this.clean();\n        this.resetState();\n      });\n  }\n  componentWillUnmount() {\n    this.clean();\n  }\n\n  render() {\n    return (\n      <a\n        className={`u-button c-btn-countdown ${this.props.styleName} ${\n          this.state.isCounting || this.state.isPending ? 'disable' : ''\n        }`}\n        onClick={this.handleClick.bind(this)}\n      >\n        {this.state.isPending\n          ? this.props.pendingTitle\n          : this.state.isError\n            ? this.props.errorTitle\n            : !this.state.isCounting\n              ? this.props.title\n              : this.state.remainTime + this.props.countdownTitle}\n      </a>\n    );\n  }\n}\n\nSendSmsCodeBtn.propTypes = propTypes;\nSendSmsCodeBtn.defaultProps = defaultProps;\n"]}