{"version":3,"sources":["../../../src/components/react/component.jsx"],"names":["Button","children","className","block","sm","props","cnB","cnSm","Err","styleName","dataFor","FormControl","name","label","FormWrap","_ref","dom","FormWrapSty1","FormWrapSty2","FormText","disabled","placeholder","FormTextarea","FormStatic","FormRadio","options","map","key","desc","optProps","FormCheckBox","pre","chil","FormImgCode","maxLen","onResetPicCode","validImg","FormSmsCode","timer","onGetSmsCodeClick","btnStyleName","btnName","btnNameCountdown","ButtonSubmit","isLoading"],"mappings":"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","file":"component.js","sourcesContent":["/**\n * Created by nonjene on 2018/5/8.\n */\nimport React from 'react';\nimport SendSmsCodeBtn from './SendSmsCodeBtn';\nimport { BlockWrap, SubBlock } from './Block';\n\nconst Button = ({ children, className = '', block, sm, ...props }) => {\n  const cnB = block ? ' button-big' : '';\n  const cnSm = sm ? ' button-sm' : '';\n  return (\n    <a className={`u-button${cnB}${cnSm} ${className}`} {...props}>\n      {children}\n    </a>\n  );\n};\n\nconst Err = ({ styleName = '', dataFor = '' }) => {\n  return (\n    <div className={`c-err-w ${styleName}`}>\n      <span data-for={dataFor} className=\"err\" />\n    </div>\n  );\n};\n\nconst FormControl = ({\n  className = '',\n  name = '',\n  label = 'label',\n  children\n}) => {\n  return (\n    <BlockWrap className={`form-control ${className}`} data-block={name}>\n      <label className=\"tc\" htmlFor={name}>\n        {label}\n      </label>\n      <SubBlock className=\"rig-ipt\">\n        {children}\n        <Err dataFor={name} />\n      </SubBlock>\n    </BlockWrap>\n  );\n};\n\nconst FormWrap = props => {\n  return (\n    <div\n      className={`m-form ${props.className || ''}`}\n      ref={dom => props._ref && props._ref(dom)}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default {\n  Err,\n  FormControl,\n  FormWrap,\n  FormWrapSty1({ className = '', ...props }) {\n    return <FormWrap className={`sty1 ${className}`} {...props} />;\n  },\n  FormWrapSty2({ className = '', ...props }) {\n    return <FormWrap className={`sty2 ${className}`} {...props} />;\n  },\n  FormText(props) {\n    return (\n      <FormControl {...props}>\n        <input\n          name={props.name}\n          disabled={props.disabled}\n          type=\"text\"\n          placeholder={props.placeholder}\n        />\n      </FormControl>\n    );\n  },\n  FormTextarea(props) {\n    return (\n      <FormControl className=\"form-txta\" {...props}>\n        <textarea name={props.name} placeholder={props.placeholder} />\n      </FormControl>\n    );\n  },\n  FormStatic(props) {\n    return <FormControl className=\"form-static\" {...props} />;\n  },\n  FormRadio(props) {\n    return (\n      <FormControl {...props}>\n        {props.options.map(({ desc, ...optProps }, key) => (\n          <label className=\"f-rdio\" key={key}>\n            <input\n              type=\"radio\"\n              className=\"toggle\"\n              name={props.name}\n              {...optProps}\n            />\n            <i>{desc}</i>\n          </label>\n        ))}\n      </FormControl>\n    );\n  },\n\n  FormCheckBox(props) {\n    return (\n      <FormControl {...props}>\n        {props.options.map(({ desc, pre, chil, ...optProps }, key) => (\n          <label className={'f-chkbox ' + pre} key={key}>\n            <input\n              type=\"checkbox\"\n              className=\"chkbox\"\n              name={props.name}\n              {...optProps}\n            />\n            <i>{desc}</i>\n          </label>\n        ))}\n      </FormControl>\n    );\n  },\n\n  /**\n   * 图文验证\n   * @param props  { onResetPicCode, validImg }\n   * @returns {*}\n   * @constructor\n   */\n  FormImgCode(props) {\n    return (\n      <FormControl className=\"form-comb\" {...props}>\n        <input name={props.name} maxLength={props.maxLen} type=\"text\" />\n        <div className=\"rig-ele pic-code\" onClick={props.onResetPicCode}>\n          {props.validImg && <img src={props.validImg} alt=\"图形验证码\" />}\n        </div>\n      </FormControl>\n    );\n  },\n  /**\n   * 短信验证\n   * @param props  { onGetSmsCodeClick, btnStyleName }\n   * @returns {*}\n   * @constructor\n   */\n  FormSmsCode(props) {\n    return (\n      <FormControl className=\"form-comb\" {...props}>\n        <input name={props.name} type=\"tel\" maxLength={props.maxLen} />\n        <div className=\"rig-ele btn-wrap\">\n          <SendSmsCodeBtn\n            timer={props.timer || 60}\n            onClick={props.onGetSmsCodeClick}\n            styleName={props.btnStyleName || ''}\n            title={props.btnName}\n            countdownTitle={props.btnNameCountdown}\n          />\n        </div>\n      </FormControl>\n    );\n  },\n  ButtonSubmit(props) {\n    return (\n      <Button\n        className={`btn-submit ${props.className || ''} ${\n          props.isLoading ? 'disable' : ''\n        }`}\n        data-action=\"submit\"\n      >\n        {props.isLoading ? '正在处理...' : props.children}\n      </Button>\n    );\n  }\n};\n"]}